import boto3

def lambda_handler(event, context):
    # Initialize the Rekognition client
    s3_client = boto3.client(service_name='s3')
    rekognition_client = boto3.client('rekognition')

    # Extract S3 bucket and object key from the event
    s3_bucket = event['Records'][0]['s3']['bucket']['name']
    s3_object_key = event['Records'][0]['s3']['object']['key']

    # Call Amazon Rekognition to analyze the image
    try:
        response_labels = rekognition_client.detect_labels(
            Image={
                'S3Object': {
                    'Bucket': s3_bucket,
                    'Name': s3_object_key
                }
            },
            MaxLabels=10,
            MinConfidence=70.0
        )

        # Process the Rekognition response for Labels
        if 'Labels' in response_labels:
            print("Detected Labels:")
            for label in response_labels['Labels']:
                print(f"Label: {label['Name']}, Confidence: {label['Confidence']}")

        # Call Amazon Rekognition to detect text in the image
        response_text = rekognition_client.detect_text(
            Image={
                'S3Object': {
                    'Bucket': s3_bucket,
                    'Name': s3_object_key
                }
            }
        )

        # Process the Rekognition response for Text
        if 'TextDetections' in response_text:
            detected_text = "Detected Text: " + " ".join([text_detection['DetectedText'] for text_detection in response_text['TextDetections']])
            print(detected_text)

        # If there are other Rekognition features you want to process, handle them here

    except Exception as e:
        print(f"Error processing image: {str(e)}")
        # Handle the error condition as needed

    # Return a response if required, but remember that Lambda doesn't wait for a response.
    # For asynchronous handling, consider using SNS or other services to notify results.

    # Store the detected text in the same S3 bucket with the same object key as the original image
    s3_client.put_object(Body=detected_text, Bucket='outputrec2201925a', Key=s3_object_key)

    return {
        'statusCode': 200,
        'body': detected_text
    }
